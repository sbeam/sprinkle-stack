# parameters for tuning and optimizing your mysql install

[client]
default-character-set=utf8

[mysqld]
default-character-set=utf8
#collation-server=utf8_general_ci
#
# The maximum permitted number of simultaneous client connections
# max_connections = 151

# * Fine Tuning *
#
# Index blocks for MyISAM tables are buffered and are shared by all threads.
# key_buffer_size is the size of the buffer used for index blocks.
key_buffer = 512M

# The maximum size of one packet or any generated/intermediate string (cf BLOBs, etc)
max_allowed_packet = 128M

# thread_stack = 192K
# thread_cache_size = 8

# * Query Cache Configuration
# Do not cache results that are larger than this number of bytes
query_cache_limit = 12M

# The amount of memory allocated for caching query results
query_cache_size  = 128M

# 1 Cache all cacheable query results except for those that begin with SELECT SQL_NO_CACHE.
query_cache_type  = 1

# The minimum size of the buffer that is used for plain index scans, range
# index scans, and joins that do not use indexes and thus perform full table scans
join_buffer_size = 4M

# Each session that needs to do a sort allocates a buffer of this size
# (whether it needs it or not)
sort_buffer_size = 2M

# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
#log            = /var/log/mysql/mysql.log
#
# Error logging goes to syslog. This is a Debian improvement :)
#
# Here you can see queries with especially long duration
# log_slow_queries  = /var/log/mysql/mysql-slow.log
long_query_time = 2
log_error=/var/log/mysql/error.log
log_warnings = 2

# The following can be used as easy to replay backup logs or for replication.
# server-id              = 1
log_bin = /var/log/mysql/mysql-bin.log
# WARNING: Using expire_logs_days without bin_log crashes the server! See README.Debian!
expire_logs_days = 10
max_binlog_size = 100M

# * InnoDB
# Optimizations taken from http://www.mysqlperformanceblog.com/2007/11/01/innodb-performance-optimization-basics/

# Store 1 file per table, instead of giant tablespace
# http://dev.mysql.com/doc/refman/5.1/en/innodb-multiple-tablespaces.html
innodb_file_per_table

# The size in bytes of the memory buffer InnoDB uses to cache data and indexes of its tables
# set to up to 80% of TOTAL MEMORY
innodb_buffer_pool_size = <%= (CONFIG[ENVIRONMENT][:db][:ram] * 0.5).to_i  %>M

# The size in bytes of a memory pool InnoDB uses to store data dictionary
# information and other internal data structures. The more tables you have in
# your application, the more memory you need to allocate here
innodb_additional_mem_pool_size = 20M


# The size in bytes of the buffer that InnoDB uses to write to the log files on disk
innodb_log_buffer_size = 8M

# The size in bytes of each log file in a log group
innodb_log_file_size = 256M

# Can dramatically speed up transactions but has the chance to possibly lose data
# in case of full OS crash. "The default value of 1 is the value required for ACID compliance"
# innodb_flush_log_at_trx_commit = 2

# InnoDB tries to keep the number of operating system threads concurrently
# inside InnoDB less than or equal to the limit given by this variable.  A
# recommended value is 2 times the number of CPUs plus the number of disks.
innodb_thread_concurrency = 8

# If autocommit = 0, InnoDB honors LOCK TABLES; MySQL does not return from LOCK
# TABLES ... WRITE until all other threads have released all their locks to the
# table.
innodb_table_locks = 0

# Depending on hardware configuration, setting innodb_flush_method to O_DIRECT
# can either have either a positive or negative effect on performance
# http://dev.mysql.com/doc/refman/5.1/en/innodb-parameters.html#sysvar_innodb_flush_method
innodb_flush_method=O_DIRECT

[mysqldump]
quick
quote-names
max_allowed_packet = 16M

[mysql]
#no-auto-rehash # faster start of mysql but no tab completition

[isamchk]
key_buffer = 16M
